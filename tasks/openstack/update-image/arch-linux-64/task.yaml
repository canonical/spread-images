summary: Update arch-linux 64 bits image with the latest updates and test dependencies

systems: [arch-linux-64-base]

environment:
    TARGET_SYSTEM: arch-linux-64

execute: |
    . "$TESTSLIB/pkgdb.sh"
    . "$TESTSLIB/utils.sh"

    if [ "$SPREAD_REBOOT" = 0 ]; then
        # Make the upgrade and install the dependencies needed to run snapd tests
        distro_update_package_db
        distro_install_package wget
        distro_upgrade_packages

        install_pkg_dependencies
        install_test_dependencies "$TARGET_SYSTEM"

        remove_pkg_blacklist

        REBOOT
    fi

    # Install grub to make it compatible with boot-state tool
    distro_install_package grub
    mkdir -p /boot/grub/
    if [ ! -e /boot/grub/grubenv ]; then
        echo "# GRUB Environment Block" > /boot/grub/grubenv
        echo "#######################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################" >> /boot/grub/grubenv
    fi

    # Enable apparmor on grub (systemd-boot is not used)
    GRUB_FILE="/etc/default/grub"
    # Add apparmor parameters if not already present
    if grep -q '^GRUB_CMDLINE_LINUX_DEFAULT=' "$GRUB_FILE"; then
        sudo sed -i '/^GRUB_CMDLINE_LINUX_DEFAULT=/ s/"$/ apparmor=1 security=apparmor"/' "$GRUB_FILE"
    else
        echo 'GRUB_CMDLINE_LINUX_DEFAULT="apparmor=1 security=apparmor"' | sudo tee -a "$GRUB_FILE"
    fi

    # Regenerating GRUB config
    GRUB_CFG_PATH="$(find /boot -name grub.cfg | head -n 1)"
    if [ -z "$GRUB_CFG_PATH" ]; then
        exit 1
    fi
    sudo grub-mkconfig -o "$GRUB_CFG_PATH"
    systemctl enable apparmor.service
    systemctl start apparmor.service

    # Setup ntp server depending on the openstack environment
    update_ntp

    # Clean the disk
    clean_machine

restore: |
    # Remove the project path content
    rm -rf "$PROJECT_PATH"
    sync
