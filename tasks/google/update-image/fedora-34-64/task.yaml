summary: Update fedora image with the latest updates and test dependencies with selinux permissive

systems: [fedora-34-64-base]

environment:
    TARGET_SYSTEM: fedora-34-64

execute: |
    . "$TESTSLIB/google.sh"
    . "$TESTSLIB/names.sh"
    . "$TESTSLIB/pkgdb.sh"
    . "$TESTSLIB/utils.sh"

    if [ "$SPREAD_REBOOT" = 0 ]; then
        # Normalize fedora base url among fedora versions
        sed -i -s -E -e 's@^#?baseurl=http://download.example/@#baseurl=http://download.fedoraproject.org/@g' /etc/yum.repos.d/fedora*.repo

        # The Fedora archive mirror seems to be unreliable.
        # Switch to the main archive by commenting out metaink and uncommenting baseurl
        sed -i -s -E -e 's@^#?baseurl=http://download.fedoraproject.org/@baseurl=http://dl.fedoraproject.org/@g' -e 's@^metalink=@#metalink@g' /etc/yum.repos.d/fedora*.repo
        dnf --refresh -y makecache

        # Make the upgrade and install the dependencies needed to run snapd tests
        distro_update_package_db
        distro_install_package kernel-modules
        distro_upgrade_packages
        install_test_dependencies "$TARGET_SYSTEM"
        remove_pkg_blacklist

        # Fedora 34 is using a non authselect setup by default now.
        dnf install authselect -y
        authselect select minimal --force

        # Disable cloud init because 34 cloud-init fails on start making fail the services:
        # 1. cloud-config.service
        # 2. cloud-final.service
        # 3. cloud-init-local.service
        # 4. cloud-init.service
        touch /etc/cloud/cloud-init.disabled

        REBOOT
    fi

    if [ "$SPREAD_REBOOT" = 1 ]; then
        # Purge old kernel-core package and install kernel modules
        distro_clean_old_packages kernel-core 
        distro_install_package kernel-modules

        REBOOT
    fi

    # Set selinux as permissive
    sed -i 's/SELINUX=.*/SELINUX=permissive/g' /etc/selinux/config

    # Clean disk before create the shapshot
    clean_machine

    # Create a new image based on the current disk
    create_image_from_disk_with_os_features "$IMAGE" "$FAMILY" "$DESCRIPTION" "$DISK" "UEFI_COMPATIBLE"

restore: |
    . "$TESTSLIB/google.sh"
    . "$TESTSLIB/names.sh"

    delete_snapshot "$DISK"
    delete_deprecated_images
