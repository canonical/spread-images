summary: Add new tumbleweed 64 bits image to google account created from openstack image

systems: [opensuse-*]

environment:
    TARGET_SYSTEM: opensuse-tumbleweed-2-64-base
    IMAGE_FILE: opensuse-tumbleweed-2-64
    #IMAGE_URL: https://download.opensuse.org/tumbleweed/appliances/openSUSE-Tumbleweed-JeOS.x86_64-OpenStack-Cloud.qcow2
    IMAGE_URL: https://download.opensuse.org/repositories/home:/maciek_borzecki:/Virtualization:/Appliances:/Images:/openSUSE-Tumbleweed/openSUSE_Tumbleweed/openSUSE-Tumbleweed-JeOS.x86_64-OpenStack-Cloud.qcow2
    DOWNLOAD_NAME: image.qcow2

execute: |
    . "$TESTSLIB/google.sh"
    . "$TESTSLIB/names.sh"

    # Get the image
    wget -O "$DOWNLOAD_NAME" "$IMAGE_URL"

    zypper install -y qemu-tools
    qemu-img convert -f qcow2 -O raw "$DOWNLOAD_NAME" disk.raw
    rm -f "$DOWNLOAD_NAME"

    # Get /dev/sda1 parition offset
    OFFSET=$( sfdisk -J disk.raw | jq '.partitiontable.partitions[2].start * 512' )

    if [ -z $OFFSET ]; then
        echo "failed to calculate offset"
        exit 1
    fi

    # Mount the disk locally
    OFFSET="$OFFSET" sh -c '\
    # Make mounting directory
    mkdir -p /mnt/disk
    # Mount the image and prepare the chroot
    mount -o offset=$OFFSET disk.raw /mnt/disk
    mount -t proc /proc /mnt/disk/proc
    mount --rbind /sys /mnt/disk/sys
    mount --make-rslave /mnt/disk/sys
    mount --rbind /dev /mnt/disk/dev
    mount --make-rslave /mnt/disk/dev'

    tee /mnt/disk/etc/cloud/cloud.cfg.d/GCE.cfg << EOF
    datasource_list: [ 'GCE' ]
    datasource: { GCE: {} }
    EOF

    # Enable repository
    zypper --root /mnt/disk ar -f -c http://download.opensuse.org/repositories/Cloud:Tools/openSUSE_Tumbleweed/Cloud:Tools.repo
    
    # Install dependencies
    zypper --root /mnt/disk --no-gpg-checks install -y google-guest-oslogin google-guest-agent
    #zypper --root /mnt/disk --no-gpg-checks update -y || true
    zypper --root /mnt/disk clean

    # Force google services be enabled to work with
    chroot /mnt/disk /bin/bash -c "systemctl enable google-startup-scripts.service"

    # Create the disk image
    umount -AR /mnt/disk
    
    tar caf "${IMAGE_FILE}.tar.gz" disk.raw --format=oldgnu || sleep 15 && tar caf "${IMAGE_FILE}.tar.gz" disk.raw --format=oldgnu

    # Copy fedora linux image to spread-images bucket
    gsutil cp "${IMAGE_FILE}.tar.gz" "gs://${BUCKET_NAME}/"
    
    # Create the image in snapd-spread project
    delete_image "$IMAGE" "$FAMILY"
    create_image_from_bucket "$IMAGE" "$FAMILY" "$DESCRIPTION" "${IMAGE_FILE}.tar.gz"

restore: |
    sudo umount -AR /mnt/disk || true
    rm -f disk.raw
    rm -f "${IMAGE_FILE}.tar.gz"
