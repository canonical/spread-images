summary: Add new ubuntu bionic 32 bits image to google account

systems: [ubuntu-*]

environment:
    TARGET_SYSTEM: ubuntu-18.04-32-base
    IMAGE_FILE: ubuntu-18-04-bionic-32bit
    IMAGE_URL: https://cloud-images.ubuntu.com/bionic/current/bionic-server-cloudimg-i386.img

execute: |
    . "$TESTSLIB/google.sh"
    . "$TESTSLIB/names.sh"

    # Get the image
    wget $IMAGE_URL
    qemu-img convert -O raw "${IMAGE_URL##*/}" disk.raw

    # Get /dev/sda1 parition offset
    OFFSET=$( sfdisk -J disk.raw | jq '.partitiontable.partitions[0].start * 512' )

    if [ -z $OFFSET ]; then
        echo "failed to calculate offset"
        exit 1
    fi

    # Make mounting directory and mount
    mkdir -p /mnt/disk

    for _ in $(seq 10); do
        if losetup -f --show -o $OFFSET disk.raw; then
            LOOP_DEV="$(losetup -f --show -o $OFFSET disk.raw)"
            continue
        fi
        sleep 10
    done
    mount "$LOOP_DEV" /mnt/disk
    mount -o bind,offset=$OFFSET /run /mnt/disk/run

    tee /mnt/disk/etc/cloud/cloud.cfg.d/GCE.cfg << EOF
    datasource_list: [ 'GCE' ]
    datasource: { GCE: {} }
    EOF

    chroot /mnt/disk /bin/bash -c "apt update"
    chroot /mnt/disk /bin/bash -c "apt install -y python ssh netcat google-compute-engine google-compute-engine-oslogin google-guest-agent"
    chroot /mnt/disk /bin/bash -c "apt autoremove -y"

    # Note: The user needs to be deleted after the image is created and booted manually
    # Add user to be able to boot the machine the first time
    chroot /mnt/disk /bin/bash -c "useradd -m testuser"
    echo "testuser:testpassword123" | chroot /mnt/disk /bin/bash -c "chpasswd"
    echo 'testuser ALL=(ALL) NOPASSWD:ALL' | sudo tee /mnt/disk/etc/sudoers.d/create-user-testuser
    sed -i 's/^\s*#\?\s*\(PermitRootLogin\|PasswordAuthentication\)\>.*/\1 yes/' /mnt/disk/etc/ssh/sshd_config

    # Manual step on first boot
    # Clean the test user
    #   > sudo su
    #   > passwd -d testuser
    #   > deluser testuser sudo
    #   > rm /etc/sudoers.d/create-user-testuser 
    # Force google services be enabled to work with spread
    #   > systemctl enable google-guest-agent.service
    #   > systemctl enable google-startup-scripts.service
    # Then save the snapshot 
    #   > gcloud compute disks snapshot <DISK_NAME> --zone us-east1-b --snapshot-names <DISK_NAME>
    # Remove the instance and create the image from created snapshot
    #   > gcloud compute images create ubuntu-1804-32-base-v$(date +'%Y%m%d') --family ubuntu-1804-32-base --description "Base image" --source-snapshot <DISK_NAME>

    # Avoid checking for new release, it could cause lock on apt
    sed -i 's/^Prompt=.*$/Prompt=never/' /mnt/disk/etc/update-manager/release-upgrades

    # Clean the image
    find /mnt/disk/var/log /mnt/disk/var/cache/apt /mnt/disk/var/lib/apt/{lists,mirrors} -type f -exec rm -f {} \;

    # Create the disk image
    umount -AR /mnt/disk
    tar caf "${IMAGE_FILE}.tar.gz" disk.raw

    # Copy ubuntu bionic 32 bits image to spread-images bucket
    gsutil cp "${IMAGE_FILE}.tar.gz" "gs://${BUCKET_NAME}/"

    # Create the image in snapd-spread project
    delete_image "$IMAGE" "$FAMILY"
    create_image_from_bucket "$IMAGE" "$FAMILY" "$DESCRIPTION" "${IMAGE_FILE}.tar.gz"

restore: |
    sudo umount -AR /mnt/disk || true
    rm -f disk.raw
    rm -f "${IMAGE_FILE}.tar.gz"
